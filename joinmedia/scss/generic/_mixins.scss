/*------------------------------------*\
	$MIXINS
\*------------------------------------*/

/**
 * CLEARFIX............................clearfix
 * PSEUDO-ELEMENTS.....................Pseudo-Elements :after/:before
 * .....pdeuso-element-default (provides default setup for most :after/:before pseudo elements)
 * .....pdeuso-element-stretch (fits pseudo-element to parent size)
 * ELEMENT-STRETCH.....................Stretch element to parent size
 * BREAKPOINTS.........................Different Breakpoints
 * .....bp-xs
 * .....bp-s
 * .....bp-m
 * .....bp-l
 * .....bp-xl
 * .....bp-xxl
 * RWD.................................Hide/Show something on Mobile/Tablet/Desktop
 * .....hide-on-desktop
 * .....hide-on-tablet
 * .....hide-on-mobile
 * .....show-on-mobile
 * BACKFACE-VISIBILITY.................Set the backface-visibility (default: hidden)
 * HEX-TO-RGB..........................RGBA Fallback -> http://codepen.io/sturobson/pen/hdKyv
 * ALIGNING............................Alignment of elements
 * .....vertical-align (Align things vertically (http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/))
 * .....centered (Absolute center position)
 * BORDER-RADIUS.......................For compatibility with Android devices
 * RETINA-IMAGES.......................Image-2x
 * TRANSFORM...........................Set Transform Prefixes
 * TRANSITIONS.........................Set Transition Prefixes
 * VISIBILTY...........................Element is visible or hidden
 * ABSOLUTE-POSITION...................Elements absolute position
 * MOVE/CHANGE-3D-POSITION.............Transform Elements position
 * USER-SELECT.........................Disable User Text Selection
 * LAYOUT..............................Layouting Elements
 * .....constrained....................Wrapper to constrain Elements
 * ELEMENT-DEFAULTS....................Default Element properties
 * .....element-default-spacing........Set Default Spacing Value to Elements
 * .....element-default................Default Element Properties
 * .....element-inner-default..........Nested Default Element inside Default Element
 * .....element-nested-default.........Nested Default Element inside Default Element (varied padding)
 * .....element-indent.................padding values for nested Elements, basically grid correction
 * .....indent.........................Left indention. Possible values: left, margin, padding (default)
 * APPEARANCE..........................Platform-Native Styling
 * FLEXBOX.............................Flex-Box default properties
 * VERTICAL-CENTER.....................Vertically center elements
**/





/*------------------------------------*\
	$CLEARFIX
\*------------------------------------*/

@mixin clearfix {
	*zoom: 1;

	&:after,
	&:before {
		content: "\0020";
		display: table;
	}

	&:after {
		clear: both;
	}
}





/*------------------------------------*\
	$PSEUDO-ELEMENTS
\*------------------------------------*/

@mixin pseudo-element-default {
	content: "";
	display: block;
	position: absolute;
}

@mixin pseudo-element-stretch {
	@include pseudo-element-default;
	bottom: 0;
	left: 0;
	right: 0;
	top: 0;
}





/*------------------------------------*\
	$ELEMENT-STRETCH
\*------------------------------------*/

@mixin element-stretch {
	bottom: 0;
	left: 0;
	position: absolute;
	right: 0;
	top: 0;
}





/*------------------------------------*\
	$BREAKPOINTS
\*------------------------------------*/

@mixin bp-xs {
	@media only screen and (min-width: $bp-xs) {
		@content;
	}
}

@mixin bp-s {
	@media only screen and (min-width: $bp-s) {
		@content;
	}
}

@mixin bp-m {
	@media only screen and (min-width: $bp-m) {
		@content;
	}
}

@mixin bp-l {
	@media only screen and (min-width: $bp-l) {
		@content;
	}
}

@mixin bp-xl {
	@media only screen and (min-width: $bp-xl) {
		@content;
	}
}

@mixin bp-xxl {
	@media only screen and (min-width: $bp-xxl) {
		@content;
	}
}





/*------------------------------------*\
	$RWD
\*------------------------------------*/

@mixin hide-on-desktop {
	@media screen and (min-width: $bp-l) {
		display: none;
	}
}

@mixin hide-on-tablet {
	@media screen and (max-width: $bp-l) {
		display: none;
	}
}

@mixin hide-on-mobile {
	@media screen and (max-width: $bp-m) {
		display: none;
	}
}

@mixin show-on-mobile {
	@media screen and (min-width: $bp-m) {
		display: none;
	}
}





/*------------------------------------*\
	$BACKFACE-VISIBILITY
\*------------------------------------*/

@mixin backface-visibility($visibility: hidden) {
	-moz-backface-visibility:		$visibility;
	-ms-backface-visibility:		$visibility;
	-webkit-backface-visibility:	$visibility;
	backface-visibility:			$visibility;
}





/*------------------------------------*\
	$HEX-TO-RGB
\*------------------------------------*/

@mixin rgba($color, $value) {
	background-color: $color;
	background-color: rgba($color, $value);
}





/*------------------------------------*\
	$ALIGNING
\*------------------------------------*/

@mixin vertical-align($position: relative) {
	@include transform(translateY(-50%));
	position: $position;
	top: 50%;
}

@mixin centered($position: relative) {
	@include move(-50%, -50%);
	left: 50%;
	top: 50%;
}





/*------------------------------------*\
	$BORDER-RADIUS
\*------------------------------------*/

@mixin border-radius($amount) {
	@include border-bottom-left-radius($amount);
	@include border-bottom-right-radius($amount);
	@include border-top-left-radius($amount);
	@include border-top-right-radius($amount);
}





/*------------------------------------*\
	$RETINA-IMAGES
\*------------------------------------*/
/**
 * Send path, image name, and width and height.
 * Name retina images [name]2x.
 * On retina, use image that's scaled by 2
**/

@mixin image-2x($image, $width, $height) {
	@media	(min--moz-device-pixel-ratio: 1.3),
			(-o-min-device-pixel-ratio: 2.6/2),
			(-webkit-min-device-pixel-ratio: 1.3),
			(min-device-pixel-ratio: 1.3),
			(min-resolution: 1.3dppx) {
				background-image: url($image);
				background-size: $width $height;
	}
}





/*------------------------------------*\
	$TRANSFORMS
\*------------------------------------*/

@mixin transform($transform) {
	-moz-transform:		$transform;
	-ms-transform:		$transform;
	-o-transform:		$transform;
	-webkit-transform:	$transform;
	transform:			$transform;
}





/*------------------------------------*\
	$TRANSITIONS
\*------------------------------------*/

@mixin transition($transition) {
	-moz-transition:	$transition;
	-ms-transition:		$transition;
	-o-transition:		$transition;
	-webkit-transition:	$transition;
	transition:			$transition;
}

@mixin transitions($transition1, $transition2) {
	-moz-transition:	$transition1, $transition2;
	-ms-transition:		$transition1, $transition2;
	-o-transition:		$transition1, $transition2;
	-webkit-transition:	$transition1, $transition2;
	transition:			$transition1, $transition2;
}

@mixin transform-transition($transition) {
	-moz-transition:	-moz-transform		$transition;
	-ms-transition:		-ms-transform		$transition;
	-o-transition:		-o-transform		$transition;
	-webkit-transition:	-webkit-transform	$transition;
	transition:			transform			$transition;
}





/*------------------------------------*\
    $VISIBILITY
\*------------------------------------*/

@mixin visibility($state) {
	@if $state == "hidden" {
		height: 0;
		opacity: 0;
		visibility: hidden;
	}

	@if $state == "visible" {
		height: auto;
		opacity: 1;
		visibility: visible;
	}
}





/*------------------------------------*\
	$ABSOLUTE-POSITION
\*------------------------------------*/

@mixin absolute($top: "", $right: "", $bottom: "", $left: "") {
	position: absolute;

	@if $top != "" {
		top: $top;
	}

	@if $right != "" {
		right: $right;
	}

	@if $bottom != "" {
		bottom: $bottom;
	}

	@if $left != "" {
		left: $left;
	}
}





/*------------------------------------*\
	$MOVE/CHANGE-3D-POSITION
\*------------------------------------*/

@mixin move($x: 0, $y: 0, $z: 0) {
	@include transform(translate3d($x, $y, $z));
	position: absolute;
}





/*------------------------------------*\
	$USER-SELECT
\*------------------------------------*/

@mixin user-select {
	-moz-user-select:		none;
	-ms-user-select:		none;
	-webkit-user-select:	none;
	user-select:			none;
}





/*------------------------------------*\
	$LAYOUT
\*------------------------------------*/

@mixin constrained {
	@include clearfix;
	margin: 0 auto;
	max-width: $layout-maxwidth;
	position: relative;
	width: 100%;
	z-index: 1;
}





/*------------------------------------*\
	$ELEMENT-DEFAULTS
\*------------------------------------*/

// Default Spacing
@mixin element-default-spacing {
	margin-bottom: $default-element-spacing;
}

// Elements Default
@mixin element-default {
	@include clearfix;
	@include column(12);
	@include element-default-spacing;
	clear: both;
	display: block;
	position: relative;
}

// Wrapped Elements Default
@mixin element-inner-default {
	@include element-indent;
	margin: {
		left: 0 !important;
		right: 0 !important;
	}
	position: relative;
}

// Nested Elements Default
@mixin element-nested-default {
	@include element-inner-default;
	padding: {
		bottom: $default-inner-spacing;
		top: $default-inner-spacing;
	}
}

// Indent Elements
@mixin element-indent {
	padding: $default-spacing $dist-s;

	@include bp-m {
		padding: {
			left: $dist-m;
			right: $dist-m;
		}
	}

	@include bp-l {
		padding: {
			left: $dist-l;
			right: $dist-l;
		}
	}
}

// Single Indent
@mixin indent($arg: padding, $multiply: 1) {
	@if $arg == left {
		left: $dist-s * $multiply;

		@include bp-m {
			left: $dist-m * $multiply;
		}

		@include bp-l {
			left: $dist-l * $multiply;
		}
	}

	@if $arg == margin {
		margin-left: $dist-s * $multiply;

		@include bp-m {
			margin-left: $dist-m * $multiply;
		}

		@include bp-l {
			margin-left: $dist-l * $multiply;
		}
	}

	@if $arg == padding {
		padding-left: $dist-s * $multiply;

		@include bp-m {
			padding-left: $dist-m * $multiply;
		}

		@include bp-l {
			padding-left: $dist-l * $multiply;
		}
	}
}





/*------------------------------------*\
	$APPEARANCE
\*------------------------------------*/

@mixin appearance($value: none) {
	-moz-appearance:	$value;
	-webkit-appearance:	$value;
	appearance:			$value;
}





/*------------------------------------*\
	$FLEXBOX
\*------------------------------------*/

@mixin flexbox($flow: row wrap) {
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-box;
	display: -webkit-flex;
	display: flex;
	flex-flow: $flow;
}

@mixin flexitem($grow: 1) {
	flex-grow: $grow;
}

@mixin flexcontent($flex: 1 100%) {
	flex: $flex;
}





/*------------------------------------*\
	$VERICALLY-CENTER-ELEMENTS
\*------------------------------------*/

@mixin vertical-center {
	display: table;
	height: 100%;
	position: absolute;
	width: 100%;
}

@mixin vertical-center-inner {
	display: table-cell;
	vertical-align: middle;
}





/*------------------------------------*\
	
\*------------------------------------*/
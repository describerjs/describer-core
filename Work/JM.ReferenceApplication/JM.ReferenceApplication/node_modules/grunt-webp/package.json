{
  "name": "grunt-webp",
  "description": "Convert images to WebP format.",
  "version": "0.0.4",
  "homepage": "https://github.com/somerandomdude/grunt-webp",
  "author": {
    "name": "P.J. Onori",
    "email": "pj@somerandomdude.com",
    "url": "http://somerandomdude.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/somerandomdude/grunt-webp.git"
  },
  "bugs": {
    "url": "https://github.com/somerandomdude/grunt-webp/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/somerandomdude/grunt-webp/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">=0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "grunt-lib-contrib": "~0.6.1",
    "async": "~0.2.10"
  },
  "devDependencies": {
    "grunt-contrib-clean": "~0.5.0",
    "grunt": "~0.4.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "grunt.js",
    "webp"
  ],
  "readme": "grunt-webp\n==========\n\nConvert your images to [WebP](https://developers.google.com/speed/webp/) format.\n\n## Getting Started\n\nTo install this plugin, open up the terminal, `cd` to your project's root directory and run the following command:\n\n```shell\nnpm install grunt-webp --save-dev\n```\n\nThis plugin depends on WebP's `cwebp` encoder. You'll need to install the [WebP Package](https://developers.google.com/speed/webp/download) or use [webp-bin](https://github.com/yuanyan/node-webp-bin)\n\nIn your `Gruntfile.js` file add the following line:\n\n```js\ngrunt.loadNpmTasks('grunt-webp');\n```\n\nThis plugin requires Grunt `~0.4.0`\n\n### Settings \n\n* __binpath (string)__ Location of the cwebp executable, default 'cwebp'. Use forward slashes as directory separator.\n* __quality (float)__ Quality factor (0:small..100:big).\n* __alphaQuality (integer)__ Transparency-compression quality (0..100)\n* __preset (string)__ Preset setting, one of: _default_, _photo_, _picture_, _drawing_, _icon_, _text_\n* __compressionMethod (integer)__ Compression method (0=fast, 6=slowest). \n* __segments (integer)__ Number of segments to use (1..4). \n* __psnr (float)__ Target PSNR (in dB. typically: 42). \n* __sns (integer)__ Spatial Noise Shaping (0:off, 100:max). \n* __filterStrength (integer)__ filter strength (0=off..100). \n* __filterSharpness (integer)__ Filter sharpness (0:most .. 7:least sharp). \n* __simpleFilter (boolean)__ Use simple filter (default is false). \n* __partitionLimit (integer)__ Limit quality to fit the 512k limit on the first partition (0=no degradation ... 100=full). \n* __analysisPass (integer)__ Analysis pass number (1..10). \n* __crop (array)__ Crop picture with the given rectangle. [x, y, width, height]\n* __resizeCrop (array)__ Resize picture (after any cropping). [width, height]\n* __multiThreading (boolean)__ Use multi-threading if available. \n* __lowMemory (boolean)__ Reduce memory usage (slower encoding). \n* __alphaMethod (string)__ Transparency-compression method (0..1). \n* __alphaFilter (string)__ Predictive filtering for alpha plane. One of: _none_, _fast_ (default) or _best_. \n* __alphaCleanup (boolean)__ Clean RGB values in transparent area. \n* __noAlpha (boolean)__ Discard any transparency information. \n* __lossless (boolean)__  Encode image losslessly.\n\n\n## Example\n\n\n```js\nmodule.exports = function(grunt) {\n\n  \n  grunt.initConfig({\n\t// WebP configuration\n    webp: {\n      files: {\n        //expand: true,\n        //cwd: 'path/to/source/images',\n        src: 'source/*.png',\n        dest: 'output/path/'\n      },\n      options: {\n        binpath: require('webp-bin').path,\n        preset: 'photo',\n        verbose: true,\n        quality: 80,\n        alphaQuality: 80,\n        compressionMethod: 6,\n        segments: 4,\n        psnr: 42,\n        sns: 50,\n        filterStrength: 40,\n        filterSharpness: 3,\n        simpleFilter: true,\n        partitionLimit: 50,\n        analysisPass: 6,\n        multiThreading: true,\n        lowMemory: false,\n        alphaMethod: 0,\n        alphaFilter: 'best',\n        alphaCleanup: true,\n        noAlpha: false,\n        lossless: false\n      }\n    }\n\n  });\n\n  // load npm task\n  grunt.loadNpmTasks('grunt-webp');\n\n  // register task\n  grunt.registerTask('default', 'webp');\n\n};\n```\n",
  "readmeFilename": "README.md",
  "_id": "grunt-webp@0.0.4",
  "dist": {
    "shasum": "d33113226a3f2147f08360aab9c8e2742fe38a0a"
  },
  "_from": "grunt-webp@0.0.4",
  "_resolved": "https://registry.npmjs.org/grunt-webp/-/grunt-webp-0.0.4.tgz"
}

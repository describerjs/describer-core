{
  "name": "imageoptim-cli",
  "author": {
    "name": "Jamie Mason",
    "url": "https://github.com/JamieMason"
  },
  "description": "Automates ImageOptim, ImageAlpha, and JPEGmini for Mac to make batch optimisation of images part of your automated build process.",
  "homepage": "https://github.com/JamieMason/ImageOptim-CLI",
  "bugs": {
    "url": "https://github.com/JamieMason/ImageOptim-CLI/issues"
  },
  "main": "./bin/imageOptim",
  "version": "1.7.11",
  "repository": {
    "type": "git",
    "url": "git://github.com/JamieMason/ImageOptim-CLI.git"
  },
  "bin": {
    "imageOptim": "bin/imageOptim",
    "imageOptimAppleScriptLib": "bin/imageOptimAppleScriptLib",
    "imageOptimBashLib": "bin/imageOptimBashLib"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/JamieMason/ImageOptim-CLI/master/LICENSE"
    }
  ],
  "keywords": [
    "advpng",
    "build",
    "codekit",
    "compress",
    "gifsicle",
    "imagealpha",
    "imagemin",
    "imageoptim",
    "images",
    "jpegmini",
    "jpegoptim",
    "jpegtran",
    "kraken",
    "mac",
    "optimisation",
    "optimise",
    "optimization",
    "optimize",
    "optipng",
    "osx",
    "pngcrush",
    "pngout",
    "smushit",
    "tinypng"
  ],
  "scripts": {
    "test": "grunt test"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "devDependencies": {
    "grunt-contrib-concat": "~0.3.0",
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-watch": "~0.5.3",
    "grunt-shell": "~0.5.0"
  },
  "contributors": [
    {
      "name": "Jamie Mason",
      "url": "https://github.com/JamieMason"
    },
    {
      "name": "James Stout",
      "url": "https://github.com/jamesstout"
    },
    {
      "name": "Simen Brekken",
      "url": "https://github.com/sbrekken"
    }
  ],
  "readme": "# ImageOptim-CLI\n\n> Automates [ImageOptim](http://imageoptim.com), [ImageAlpha](http://pngmini.com), and\n> [JPEGmini for Mac](http://jpegmini.com/mac) to make batch optimisation of images part of your\n> automated build process.\n\nWhile other image optimization tools are available from the command line, ImageOptim-CLI exists\nbecause the [current benchmarks](http://jamiemason.github.io/ImageOptim-CLI/) suggest that\nImageOptim, ImageAlpha and JPEGmini currently outperform those alternatives over lossless and\nlossy optimizations.\n\nCheck out this short [video demo of ImageOptim-CLI](https://www.youtube.com/watch?v=HGBounRIzSs) to\nsee how it works.\n\n\n\n\n## Contents\n\n+ [Installation](#installation)\n  + [Manual Installation](#manual-installation)\n+ [Usage](#usage)\n+ [Examples](#examples)\n  + [Optimise a directory of images](#optimise-a-directory-of-images)\n  + [Optimise a filtered set of images](#optimise-a-filtered-set-of-images)\n  + [Passing additional options](#passing-additional-options)\n  + [Adding to git pre-commit hook](#adding-to-git-pre-commit-hook)\n+ [Related projects](#related-projects)\n  + [Grunt plugin](#grunt-plugin)\n  + [Comparison of image optimization tools](#comparison-of-image-optimization-tools)\n  + [Article for Smashing Magazine](#article-for-smashing-magazine)\n  + [Alfred workflow](#alfred-workflow)\n  + [Gulp Plugin](#gulp-plugin)\n+ [FAQs](#faqs)\n  + [General](#general)\n  + [ImageOptim](#imageoptim)\n  + [ImageAlpha](#imagealpha)\n  + [JPEGmini](#jpegmini)\n  + [Windows and Linux](#windows-and-linux)\n\n\n\n\n## Installation\n\nImageOptim-CLI is written in Shell and AppleScript, you don't _need_ Node.js to run it.\n[npm](https://npmjs.org/) is suggested because it makes installation very convenient.\n\n    $ npm install -g imageoptim-cli\n\n\n### Manual Installation\n\nYou can install manually by downloading the latest zip then adding ImageOptim-CLI to your\n[$PATH](https://en.wikipedia.org/wiki/PATH_\\(variable\\)).\n\n\t$ curl --output imageoptim-cli.zip https://codeload.github.com/JamieMason/ImageOptim-CLI/zip/1.7.11\n\t$ unzip imageoptim-cli.zip\n\t$ export PATH=$PATH:imageoptim-cli/bin\n\n> Saving somewhere in your home directory such as `~/imageoptim-cli` is recommended, but not\nessential. Saving to `/Applications` is **not** recommended, do not do this.\n\n\n\n\n## Usage\n    Usage: imageOptim [options]\n    \n    Options:\n    \n      -d, --directory     directory of images to process\n      -a, --image-alpha   pre-process PNGs with ImageAlpha.app *\n      -j, --jpeg-mini     pre-process JPGs with JPEGmini.app **\n      -q, --quit          quit all apps when complete\n      -h, --help          display this usage information\n      -e, --examples      display some example commands and uses\n      -v, --version       display the version number\n    \n    *  http://pngmini.com\n    ** https://itunes.apple.com/us/app/jpegmini/id498944723\n    \n\n\n\n\n\n## Examples\n### Optimise a directory of images\n\nThis command will optimise all image files in your Awesome project.\n\n    imageOptim --directory ~/Sites/Awesome # [options]\n\n### Optimise a filtered set of images\n\nThis command will optimise just the .jpg files in your Awesome project.\n\n    find ~/Sites/Awesome -name '*.jpg' | imageOptim # [options]\n\n### Passing additional options\n\nThe long format for enabling options is as follows;\n\n    imageOptim --jpeg-mini --image-alpha --quit --directory path/to/images\n\nThe equivalent of the above in short format is as follows;\n\n    imageOptim -j -a -q -d path/to/images\n\n### Adding to git pre-commit hook\n\nAdding the below to **your_project/.git/hooks/pre-commit** will run ImageOptim-CLI\neach time you commit new and changed files into your project. Any files which\naren't images will be ignored.\n\n    git diff --cached --name-only --diff-filter=ACM | imageOptim # [options]\n\n\n\n\n\n\n\n\n## Related Projects\n\n\n### Grunt Plugin\n\nThe ImageOptim-CLI [Grunt](http://gruntjs.com) plugin\nis [grunt-imageoptim](https://github.com/JamieMason/grunt-imageoptim).\n\n\n### Comparison of image optimization tools\n\nImageOptim-CLI features in this comparison of the [performance of image optimisation\ntools](http://jamiemason.github.io/ImageOptim-CLI/) alongside Kraken.io, CodeKit,\ngrunt-contrib-imagemin, Smush.it, and TinyPNG.\n\n\n### Article for Smashing Magazine\n\n[How Optimized Are Your Images? Meet ImageOptim-CLI, a Batch Compression\nTool](http://www.smashingmagazine.com/2013/12/17/imageoptim-cli-batch-compression-tool/)\n\n\n### Alfred Workflow\n\nThe ImageOptim-CLI Workflow for Alfred app\nis [alfred-image-optim-workflow](https://github.com/ramiroaraujo/alfred-image-optim-workflow)\n\n\n### Gulp Plugin\n\nThe ImageOptim-CLI [Gulp](http://gulpjs.com) plugin is\n[gulp-imageoptim](https://github.com/JamieMason/gulp-imageoptim).\n\n\n\n\n## FAQs\n\n\n\n\n\n### General\n\n#### Do ImageOptim, ImageAlpha, or JPEGmini come bundled with the ImageOptim-CLI installation?\n\nYou will need to install these applications separately.\n\n#### Do I have to pay to use ImageOptim-CLI?\n\nThe CLI, ImageOptim and ImageAlpha are all free. JPEGmini is a paid-for product but you can use\nImageOptim-CLI and choose not to run JPEGmini.\n\n#### Why are shorthand options supplied in the format `imageoptim -a -j -q` instead of the more common `imageoptim -ajq`?\n\nThis was an early mistake which now needs supporting for backwards compatibility.\n[Issue 21](https://github.com/JamieMason/ImageOptim-CLI/issues/21) is open to add support for\nthe `-ajq` format as well as the current format.\n\n#### The WebP image format looks promising, can you get ImageOptim-CLI to convert images to it?\n\nWebP looks great and may well overtake the formats handled by ImageOptim-CLI, but converting images\nto WebP is outside ImageOptim-CLI's chosen remit.\n\n#### Can you get ImageOptim-CLI to skip images it has already processed, if they haven't changed?\n\nJPEGmini does this today, but for ImageOptim and ImageAlpha I feel a feature like this belongs\nin those applications rather than this automator.\n\n\n\n\n### ImageOptim\n\n\n#### ImageOptim got my fans ackin' straight up Cray Cray.\n\nOptimising images is a pretty intensive process, so instead of optimising one image at a time (which\nwould take forever) — ImageOptim optimises many images at the same time until all of them are done.\n\nA side effect of this is that the fans come on at full power to keep your machine cool while it's\nmaxed out.\n\n\n\n\n\n### ImageAlpha\n\n#### I don't think ImageAlpha is running, I can't see anything.\n\nImageOptim-CLI uses ImageAlpha's internal installation of [pngquant](http://pngquant.org) so it's\nnormal that nothing is shown on screen.\n\nIt's also possible that if you look in the [Activity Monitor](http://support.apple.com/kb/HT5890)\nyou will not see `pngquant` displayed but it _is_ being run. In my experience it's only when you\nrun ImageOptim-CLI on a very large number of PNGs that you have enough time to spot it.\n\n#### Can I configure ImageAlpha's settings using ImageOptim-CLI?\n\nImageOptim-CLI is intended to be a simple, convenient, powerful, general-purpose image optimisation\ntool. If your needs have outgrown ImageOptim-CLI it's better to\nrun [pngquant](http://pngquant.org) separately, passing whatever custom settings you need.\n\n\n\n\n\n### JPEGmini\n\n#### Can I use ImageOptim-CLI with JPEGmini Lite, the free version of JPEGmini?\n\nNot currently, the full version of JPEGmini already has some subtle differences and JPEGmini Lite\ncauses further fragmentation. It is possible but not a priority, as the free version has a limit of\nprocessing 30 images per day anyway.\n\n#### I upgraded from JPEGmini Lite to JPEGmini but ImageOptim-CLI still says JPEGmini is not installed.\n\nPerforming the in-app upgrade leaves the app named as jpegmini-lite, so ImageOptim-CLI can't\ndetermine whether it's the free or full version. It is better to instead buy [the full version of\nJPEGmini](https://itunes.apple.com/us/app/jpegmini/id498944723) separately.\n\n#### ImageOptim-CLI says “To automate JPEGmini we need to enable GUI Scripting”, how do I do that?\n\nSee this tutorial on [how to manage Accessibility preferences\nand GUI Scripting](http://www.macosautomation.com/mavericks/guiscripting/index.html). In the case\nof OS X Mavericks, you will want to add the Applications JPEGmini and Terminal (or equivalent such\nas iTerm).\n\n\n\n\n\n### Windows and Linux\n\n#### Can I use ImageOptim-CLI on Windows or Linux?\n\nImageOptim-CLI is responsible for automating 3 OS X applications so is inherently bound to OS X for\nthat reason.\n\n#### Are there any plans for ImageOptim-CLI to support Windows or Linux?\n\nIt would first require ImageOptim, ImageAlpha, and JPEGmini to be available for those platforms.\n\n#### I don't have OS X, can you recommend an alternative to ImageOptim-CLI?\n\n[@addyosmani](https://github.com/addyosmani) wrote a really thorough article on [tools for\nimage optimization](http://addyosmani.com/blog/image-optimization-tools/) which discusses a wide\nrange of options in great detail.\n",
  "readmeFilename": "README.md",
  "_id": "imageoptim-cli@1.7.11",
  "_from": "imageoptim-cli@>= 1.6.19"
}

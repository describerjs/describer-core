@using System.Web.Mvc.Html
@using JM.Foundation.Mvc.Helper
@using Piranha.Extend.Regions
@model Tiles
@{
	string regionID = "0";
	string fieldString = "";

	fieldString = @Html.GetFullHtmlFieldName(m => m.Elements.FirstOrDefault().Content);
	regionID = fieldString.Replace("Regions[", "").Split(']')[0];
}

<div id="@String.Format("tileformupdate{0}", regionID)">
<script>
	// Floatpanels für Editoren wieder entfernen
	$(document).ready(function() {
		if(tinyMCE.editors.length > 1){
			$(window).unbind('scroll');
		}

		$("body").on("click", "#@String.Format("addtile{0}", regionID)", function () {
			var serializedData = $('#@String.Format("tileform{0}", regionID)').serialize();
			jQuery.ajax({
				url: '/PiranhaModel/AddTile',
				type: 'POST',
				data: serializedData,
				beforeSend: function () {
					//addSpinnerToBody();
				},
				success: function (data) {
					$("#@String.Format("tileformupdate{0}", regionID)").replaceWith(data);
					removeSpinnerToBody();
				},
				error: function () {
					//removeSpinnerToBody();
					$("#@String.Format("tileformupdate{0}", regionID)").html("<p>Leider ist ein Fehler aufgereten, versuchen Sie es später erneut.</p>");
				}
			});
		});
	});
</script>
<ul class="form" id="@String.Format("tileform{0}", regionID)">
	@foreach(var tile in Model.Elements)
	{
		<li>
			@Html.LabelFor(m => tile.Content)
			<div class="input">
				@Html.TextAreaFor(m => tile.Content, new { rows=8, cols=20, @class="editor"})
			</div>
		</li>
		<li>
			@Html.PartialFor("ImageRegion", m => tile.Image)
		</li>
	}
	<li><a class="btn" id="@String.Format("addtile{0}", regionID)">Neue Kachel hinzufügen</a></li>
	<li>
		@Html.LabelFor(m => m.Hide, "Verstecken")
		<div class="input">@Html.CheckBoxFor(m => m.Hide)</div>
		<p>Blendet das aktuelle Element vollständig aus</p>
	</li>
</ul>
	</div>